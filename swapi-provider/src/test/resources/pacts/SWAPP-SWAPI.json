{
    "provider": {
        "name": "SWAPI"
    },
    "consumer": {
        "name": "SWAPP"
    },
    "interactions": [
        {
            "description": "a request for people'",
            "request": {
                "method": "GET",
                "path": "/people"
            },
            "response": {
                "status": 200,
                "headers": {
                    "Content-Type": "application/json"
                },
                "body": {
                    "items": [
                        {
                            "id": 1,
                            "name": "Luke Skywalker",
                            "gender": "male"
                        },
                        {
                            "id": 1,
                            "name": "Luke Skywalker",
                            "gender": "male"
                        }
                    ]
                },
                "matchingRules": {
                    "body": {
                        "$.items": {
                            "matchers": [
                                {
                                    "match": "type"
                                }
                            ],
                            "combine": "AND"
                        },
                        "$.items[*].id": {
                            "matchers": [
                                {
                                    "match": "integer"
                                }
                            ],
                            "combine": "AND"
                        },
                        "$.items[*].name": {
                            "matchers": [
                                {
                                    "match": "regex",
                                    "regex": ".+"
                                }
                            ],
                            "combine": "AND"
                        },
                        "$.items[*].gender": {
                            "matchers": [
                                {
                                    "match": "regex",
                                    "regex": "male|female|n/a|hermaphrodite"
                                }
                            ],
                            "combine": "AND"
                        }
                    }
                }
            },
            "providerStates": [
                {
                    "name": "provider has data"
                }
            ]
        },
        {
            "description": "a request for person with ID 1'",
            "request": {
                "method": "GET",
                "path": "/people/1"
            },
            "response": {
                "status": 200,
                "headers": {
                    "Content-Type": "application/json"
                },
                "body": {
                    "id": 1,
                    "name": "Luke Skywalker",
                    "gender": "male"
                },
                "matchingRules": {
                    "body": {
                        "$.id": {
                            "matchers": [
                                {
                                    "match": "integer"
                                }
                            ],
                            "combine": "AND"
                        },
                        "$.name": {
                            "matchers": [
                                {
                                    "match": "regex",
                                    "regex": ".+"
                                }
                            ],
                            "combine": "AND"
                        },
                        "$.gender": {
                            "matchers": [
                                {
                                    "match": "regex",
                                    "regex": "male|female|n/a|hermaphrodite"
                                }
                            ],
                            "combine": "AND"
                        }
                    }
                }
            },
            "providerStates": [
                {
                    "name": "provider has data"
                }
            ]
        },
        {
            "description": "a request for person with ID 1'",
            "request": {
                "method": "GET",
                "path": "/people/1"
            },
            "response": {
                "status": 404
            },
            "providerStates": [
                {
                    "name": "provider has no data"
                }
            ]
        }
    ],
    "metadata": {
        "pact-specification": {
            "version": "3.0.0"
        },
        "pact-jvm": {
            "version": "3.5.16"
        }
    }
}